=== Projektidee G4brielle, 2016-04-05 ===

Ein Generator für Dungeons basierend auf Dungeon and Dragons

Dieser Generator soll verschiedene Dropdowns haben in denen man Einstellungen ändern kann.
Einstellungen sind zum Beispiel:

Der Schwierigkeitsgrad in leicht, mittel, schwer, tödlich
Die Gruppengröße varierend zwischen 1-15
Das Level der Gruppe, wobei dort auch Mischgruppen vorhanden sein sollen zwischen Level 1-20
Die Dungeongröße in klein, mittel, groß, sehr groß
Der Drachentyp ob rot, blaub, grün, schwarz, weiß, bronze, silber, gold, kupfer, messing
Und ob es der Dungeon des Drachen ist oder nicht.

Ausgegeben werden soll:
Der Loot, abhängig vom Drachentyp für den Dungeon und der Loot für die einzelnen Mobsgruppen
Die Mobs, eingeteilt in Gruppen
Eine Karte, mit Nummerierung für die Mobgruppen

=== Feedback Alpers, 2016-04-06 ===

Einerseits haben Sie sich hier viele Gedanken über Details gemacht, die relevant sind, andererseits ist noch nicht ganz klar, was die Anwendung tun soll. Denn Sie sprechen ja von einem Generator. Soll der Karten generieren, die z.B. für Leiter einer Spielrunde gedacht sind? Sollen es tabellarische Aufstellungen sein? Soll es ein Abenteuergenerator sein, der also textuelle Abschnitte generiert, die dann wie bei einem Mehrspielerabenteuer also quasi als Buch ausgegeben werden? Und was tut das eigentliche Programm dabei?

Wenn es lediglich ein Nachschlagewerk werden soll, ist das für eine interaktive Anwendung zu dünn. Um Missverständnisse zu vermeiden: Bei Rollenspielsystemen liegen ja Tabellen bei, in denen Spielleiter nachschlagen, was die Spieler erhalten, wenn Sie z.B. ein bestimmte Monster erschlagen haben. Wenn sie jetzt nichts weiter tun wollen, als diese Tabellen einzuprogrammieren und dazu ein paar Zeilen programmieren, damit Spielleiter durch das Programm schnell ermitteln können, was die Spieler erhalten, dann ist das eine simple Datenbankabfrage aber kein interaktives Programm im Sinne des Projekts.

Missverstehen Sie das bitte nicht: Wenn es ein solches Programm noch nicht gibt, dann werden Sie mit Sicherheit viele Menschen finden, die darauf warten. (Unter anderem die Herausgeber von AD&D, die dann Lizenzgebühren verlangen werden.) Aber die Hauptaufgabe bei der Programmierung wäre in diesem Fall das Übertragen der Tabellen aus den Regelbüchern in Datenrelationen. Und so etwas ist im Kern unglaublich langweilig, weil Sie nichts anderes tun, als stumpf Zahlen und Wörter manuell zu kopieren. Abgesehen davon hat das im Grunde nichts mit Informatik zu tun. (Übrigens ist es für den Leistungsnachweis irrelevant, wie viele Texte, Bilder und Datenbankeinträge tatsächlich vorhanden sein werden: Wichtig ist, wie die Programmierung in HTML, PHP und ggf. MySQL aussieht.)

Wenn Sie nach diesen Hinweisen keine Idee bekommen, wie Sie Ihr Projekt abwandeln können, sodass es eine interaktive Anwendung im Sinne des Projekts wird, dann setzen Sie das Spiel Targi um. Unter http://www.brettspiele-report.de/targi/ finden Sie eine ausführliche Beschreibung.

=== Antwort auf das Feedback G4brielle, 2016-04-08 ===

Der Generator soll einen Dungeon generieren und damit selbstverständlich auch eine Karte auf der Nummern stehen denen weitere Informationen (wie z.B. Mobgruppen) zugeordnet sind.

Die Karte, wie auch die zusätzlichen Informationen, werden anhand von Usereingaben (Die von mir genannten Einstellungen, s.o.) individuel generiert. Natürlich liegen die Daten dafür in irgend einer tabellarischen Form vor, der Schwerpunkt liegt aber auf der eigentlichen Generation, die neben den genannten Einstellungen auch zufällige Elemente enthält um bei jedem neuen generieren auch unterschiedliche Ergebnisse zu ermöglichen. Die dafür verwendeten Daten basieren zwar auf Dungeon und Dragons (Und sind zum Teil lizenzfrei als Basic Rules verfügbar), sind aber nicht nur auf dieses eine Regelwerk festgelegt.

Zu dem Spiel Targi ist mir aufgefallen, dass dieses bereits online spielbar ist und damit ja nicht als Projekt geeignet ist (Da es ja etwas neues sein muss).

=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===

Sie haben jetzt gezeigt, dass Sie einfache Arbeiten mit einem Git-Repository beherrschen.
Als Teil der letzten Aufgabe sollten Sie beschreiben, was Ihre Anwendung tun soll, also was für Funktionalitäten Ihre Anwendung bieten soll.
Wenn Sie hier nichts angegeben haben, dann werde ich Ihnen einen Vorschlag hochladen, mit dem Sie weiterarbeiten können.
In der Veranstaltung haben Sie außerdem gelernt, was Markup Languages sind.

Die nächste Aufgabe besteht aus den folgenden Teilen:

1.) Lesen Sie mein Feedback durch und setzen Sie die beschriebenen Aufgaben um.

Für die folgende Aufgabe sollten Sie mindestens eine halbe Stunde investieren. Zwei Stunden wäre aber etwas zu viel des guten.
Bearbeiten Sie die Aufgaben 2. und 3. bitte innerhalb von 48 Stunden, weil andere Studierende davon abhängen, dass Sie sie beendet haben.
Bearbeiten Sie die Aufgaben auf jeden Fall in der vorgegebenen Reihenfolge.
Und bearbeiten Sie eine Aufgabe nicht nachträglich nochmal. (Wenn Sie also z.B. Aufgabe 3. bearbeiten, dann ändern Sie bitte nichts an Aufgabe 1. nachträglich ab. Dafür wird später noch genug Zeit sein.)

2.) Bennen Sie die strukturellen Elemente, aus denen Ihre Anwendung bestehen soll.
Es ist dabei egal, ob es diese Elemente in HTML gibt.
Es ist auch egal, ob Sie sich schon in HTML eingearbeitet haben.
Wichtig ist nur, dass Sie die strukturellen Elemente benennen, aus der die Anwendung bestehen soll.
Speichern Sie diese Aufstellung als HTML-Kommentar in einer Datei mit dem Namen

strukt.html

, die Sie in Ihrem Repository abspeichern. Wichtig: Die Datei soll nicht im Unterverzeichnis Dokumentation des Repositories gespeichert werden, weil sie die Basis für das erste HTML-Dokument werden wird.

Wenn Sie noch unsicher sind: Strukturelle Elemente können alles mögliche sein:
- Tabellen
- Listen
- Schaltflächen
- Textfelder
- Bildbereiche
- Hintergrundmusik
- Absätze
- ...

In anderen Worten: Ein strukturelles Element ist etwas, das ein abgegrenzter Teil der Anwendung ist.
Notieren Sie kurz, welche Funktion jedes der von Ihnen genannten Elemente haben soll.

Hier einige Beispiele:
- Schaltfläche (Nutzer können per Klick bestätigen, dass eine Eingabe abgeschickt werden soll.)
- Textfeld für Namen (Nutzer können Ihren Nachnamen eintragen.)
- Log-In-Maske (Bereich, in dem Nutzer sich einloggen können.)
- - Teile der Log-In-Maske:
- - Textfeld für Username
- - Textfeld, das die Eingabe nicht anzeigt, fürs Passwort
- Tabelle, 7 x 5 Felder (Jedes Feld soll ein Bild anzeigen, das ein Feld des Spielbretts ist. Wenn Nutzer ein Feld anwählen, soll ein Menü erscheinen.)
- - Menü für jedes Feld der Tabelle mit Texteinträgen (Eintrag für "Gebäude abreißen", "Feld kaufen")
- Hintergrundbild (Hier sollen einzelne Bilder als Diashow eingeblendet werden.)
- Werbebanner
- Schaltfläche für die Maskierung von NSFW (NSFW = Not safe for work)(NutzerInnen können über diese Schaltfläche eine andere Anwendung in der Vordergrund einblenden lassen, damit der Chef nicht sieht, dass sie gerade spielen.)

3.) Schauen Sie jetzt in der Liste der Repositories (nicht in der Tabelle der Accounts) nach, welche zehn Repositories vor und nach Ihrem Repository aufgeführt sind und geben Sie den Besitzern dieser Repositories Zugriffsrechte auf Ihr Repository.

Bsp.: Sie haben das Repository BerndStromberg. Dann folgen die zehn Repositories der Nutzer BlackWolf63, Cantinaband, CaptainWeasle, ColePfeiffer, CurvLietzau,
DangerDulf, dnbdel, Domsche, Eldinox und Eupuco und vor Ihnen gibt es die fünf Repositories der Nutzer 2238867, amelie-beh, Anger21, anita1997 und Asphalon. all diesen Accounts geben Sie jetzt Zugriffsrechte auf Ihr Repository, so wie Sie das schon für mich getan haben. Wenn Sie, wie BerndStrommberg zu weit am Anfang der Liste stehen (hier gibt es ja nur fünf andere Accounts bis zum Anfang der Liste), dann geben Sie zusätzlich noch den Besitzern der letzten fünf Repositories Zugriffsrechte. Es sollten insgesamt 20 Accounts Zugriffsrecht haben.

Für die nächsten zwei Aufgaben sollten Sie pro Repository zwischen zehn Minuten und einer Stunde aufwenden. Weniger ist zu wenig und mehr ist zu viel.
Beachten Sie dabei bitte, dass Sie hier letzten Endes Kritik an der Arbeit eines/einer anderen üben und das einige von Ihnen noch nie programmiert haben. Arbeiten Sie deshalb bitte daran, alles, was Sie ergänzen so neutral und höflich wie möglich zu formulieren, denn Unwissenheit und mangelndes Verständnis fürs Programmieren sind eben nicht das selbe wie Dummheit oder Faulheit.

Bitte erledigen Sie diese Aufgaben innerhalb der nächsten sieben Tage.

4.) Als nächstes greifen Sie auf die nach Ihrem Repository nachfolgenden fünf Repositories zu und bearbeiten hier die folgende Aufgabe. (Hier hängen Sie also davon ab, dass andere Kommilitonen Aufgabe 3. erledigt haben.) 

Lesen Sie sich die Projektidee durch und machen Sie sich ähnlich wie bei 2. einfache Stichpunkte über strukturelle Elemente, die Sie bei dieser Projektidee sinnvoll finden. (Hier erstmal nur Stichpunkte, Details arbeiten Sie unter 5. aus.)

5.) Öffnen Sie jetzt die Datei strukt.html des Repositories, das Sie gerade bearbeiten. Ergänzen Sie Elemente, die Sie unter 4. notiert haben und die noch nicht eingetragen sind in der unter 2. beschriebenen Form.

Abschließender Hinweis zu 4. und 5.:

Auch wenn das nirgends explizit steht sollen Sie Änderungen in das Repository pushen, aus dem sie die Datei strukt.html gepullt haben.
Es ist dabei sehr wahrscheinlich, dass Sie (vielleicht auch erst später während der Projektbearbeitung) einen merge durchführen müssen. Wenn Sie sich noch nicht angesehen haben, wie das geht, dann tun Sie es jetzt.

Viele Grüße,
Markus Alpers

=== Feedback Alpers, 2016-04-27 ===

Leider haben Sie einen essentiellen Hinweis übersehen: Der Generator ist leider nicht als Projekt geeignet, weil er nicht ausreichend interaktiv ist. Interaktivität zwischen Mensch und Maschine ist bei diesem Projekt aber der zentrale Dreh- und Angelpunkt.

Damit kommen wir zu einer der wichtigsten Grundlagen der Projektarbeit: Wenn Sie ohne Absprache mit einem Kunden (dessen Part ich als Dozent übernehme) etwas umsetzen, dass nicht dem entspricht, was er will, dann ist die Konsequenz im schlimmsten Fall, dass Sie einen Auftrag verlieren. In jedem Fall aber werden Sie für geleistete Arbeit nichts erhalten, weil Sie etwas erstellt haben, das der Kunde nicht will.

Da Sie das Spiel Targi nicht umsetzen wollen, nehmen Sie bitte das folgende Spiel als Vorlage: Imperial http://www.brettspiele-report.de/imperial/

=== Feedback Ende ===